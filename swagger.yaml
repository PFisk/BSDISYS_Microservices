swagger: "2.0"
info:
  description: "Test server for ITU Information"
  version: "1.0"
  title: "ITU Super API"
host: "itusuperapi.swagger.io"
tags:
 - name: "student"
   description: "Information about the student goes here"
 - name: "teacher"
   description: "Information about the teacher goes here"
 - name: "course"
   description: "Information about the course goes here"
schemes: 
 - "http"
 - "https"
paths:
  /student:
    post:
      tags:
      - "student"
      summary: "Add a new student"
      operationId: "addStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that should be added to the system"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses: 
        "405":
          description: "Invalid input"
    put:
      tags:
      - "student"
      summary: "Modify an existing student"
      operationId: "modifyStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Student object that should be changed in the system"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses: 
        "400":
          description: Invalid ID
        "404":
          description: ID not found
        "405":
          description: "Invalid input"
  /student/{student_id}:
    get:
      tags:
      - "student"
      summary: "Returns information about the student"
      description: "Returns a student object from its ID"
      operationId: "getStudentByID"
      produces:
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Student found!"
          schema: 
            $ref: "#/definitions/Student"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Student not found"
          
    delete:
      tags:
      - "student"
      summary: "Deletes a student"
      description: ""
      operationId: "deleteStudent"
      produces:
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        description: "Student ID to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Student not found"
  /student/{student_id}/workload:
    get:
      tags:
      - "student"
      summary: "Find workload of student with ID"
      description: ""
      operationId: "getWorkload"
      produces: 
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Workload found!"
          schema:
            type: integer
            example: 30
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Student not found"
  /student/{student_id}/{course_id}:
    get:
      tags:
      - "student"
      summary: "Find satisfaction ratings for the course"
      description: ""
      operationId: "getCourseRating"
      produces: 
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "course_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Rating found!"
          schema:
            $ref: "#/definitions/CourseRating"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
    put:
      tags:
      - "student"
      summary: "Update rating for course"
      description: ""
      operationId: "updateRating"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - name: "student_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "course_id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated course rating"
        required: true
        schema:
          $ref: "#/definitions/CourseRating"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
      
  /teacher:
    post:
      tags:
      - "teacher"
      summary: "Add a new teacher"
      parameters:
      - in: "body"
        name: "body"
        description: "Teacher to be added"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
      responses: 
        "405":
          description: "Invalid input"
    put:
      tags:
      - "teacher"
      summary: "Modify an existing teacher"
      parameters:
      - in: "body"
        name: "body"
        description: "Teacher to be added"
        required: true
        schema:
          $ref: "#/definitions/Teacher"
      responses:
        "400":
          description: "Invalid ID"
        "404":
          description: "ID not found"
        "405":
          description: "Invalid input"
  /teacher/{teacher_id}:
    get:
      tags:
      - "teacher"
      summary: "Find teacher by ID"
      parameters:
      - name: "teacher_id"
        in: "path"
        description: "ID of teacher to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Teacher found!"
          schema:
            $ref: '#/definitions/Teacher'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Teacher not found"
    delete:
      tags:
      - "teacher"
      summary: "Delete teacher by ID"
      parameters:
      - name: "teacher_id"
        in: "path"
        description: "ID of teacher to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Teacher not found"
  /course:
    post:
      tags:
      - "course"
      summary: "Add a new course"
      parameters:
      - name: "body"
        in: "body"
        description: "The course to be added"
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        "201":
          description: "Success"
        "400":
          description: "Invalid input"
    put:
      tags:
      - "course"
      summary: "Modify an existing course"
      parameters:
      - name: "body"
        in: "body"
        description: "The changes to be made"
        required: true
        schema:
          $ref: '#/definitions/Course'
      responses:
        "201":
          description: "Changed"
        "400":
          description: "Invalid ID"
        "404":
          description: "Course with id not found"
        "405":
          description: "Invalid input"
  /course/{course_id}:
    get:
      tags:
      - "course"
      summary: "Find course by ID"
      parameters:
      - name: "course_id"
        in: "path"
        description: "ID of course to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Course found!"
          schema:
            $ref: '#/definitions/Course'
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Course not found"
    delete:
      tags:
      - "course"
      summary: "Remove course by ID"
      parameters:
      - name: "course_id"
        in: "path"
        description: "id of the course to remove"
        required: true
        type: "integer"
        format: "int32"
      responses:
        "201":
          description: "Success"
        "400":
          description: Invalid input
        "404":
          description: Course with id not found
          
definitions:
  Student:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        example: John Doe
      courses:
        type: array
        description: 'IDs of courses taken by student'
        items:
          type: integer
          format: int32
  Teacher:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        example: Agata
      coursesTaught:
        type: array
        description: 'IDs of courses taught by teacher'
        items:
          type: integer
          format: int32
  TeacherRating:
    type: object
    properties:
      student_id:
        description: The student giving the rating
        type: integer
        format: int32
      teacher_id:
        description: The teacher getting rated
        type: integer
        format: int32
      rating:
        description: The rating the student is giving
        type: integer
        format: 1-10
  Course:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        example: 'DISYS'
      teachers:
        type: array
        description: The IDs of the teachers teaching this course.
        items:
          type: integer
          format: int32
      workload:
        type: number
        format: float
        example: 7.5
        description: The ECTS count of the course
  CourseRating:
    type: object
    properties:
      student_id:
        description: The student giving the rating
        type: integer
        format: int32
      course_id:
        description: The course getting rated
        type: integer
        format: int32
      rating:
        description: The rating the student is giving
        type: integer
        format: 1-10